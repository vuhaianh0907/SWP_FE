{"ast":null,"code":"import _slicedToArray from \"E:\\\\Semester 5\\\\SWP\\\\swp_demo\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\Semester 5\\\\SWP\\\\swp_demo\\\\src\\\\BodyContent\\\\customer\\\\CustomerViewDoctor\\\\CustomerViewDoctor.js\";\nimport React, { useState } from 'react';\nimport './CustomerViewDoctor.css';\nfunction CustomerViewDoctor() {\n  var _this = this;\n  // Dữ liệu danh sách bác sĩ\n  var _useState = useState([{\n      id: 1,\n      name: 'Bác sĩ A',\n      generalInfo: 'Thông tin chung về bác sĩ A',\n      location: 'Địa chỉ A'\n    }, {\n      id: 2,\n      name: 'Bác sĩ B',\n      generalInfo: 'Thông tin chung về bác sĩ B',\n      location: 'Địa chỉ B'\n    }, {\n      id: 3,\n      name: 'Bác sĩ C',\n      generalInfo: 'Thông tin chung về bác sĩ C',\n      location: 'Địa chỉ C'\n    }]),\n    _useState2 = _slicedToArray(_useState, 2),\n    doctors = _useState2[0],\n    setDoctors = _useState2[1]; // Chọn thời gian trong ngày\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedTime = _useState4[0],\n    setSelectedTime = _useState4[1]; // Lọc danh sách bác sĩ dựa trên thời gian chọn\n  var filteredDoctors = doctors.filter(function (doctor) {\n    // Nếu chưa chọn thời gian, hiển thị tất cả bác sĩ\n    if (!selectedTime) {\n      return true;\n    }\n    // Kiểm tra thời gian của bác sĩ có trùng với thời gian chọn hay không\n    // Ở đây ta sử dụng một điều kiện giả để kiểm tra\n    // Thay bằng điều kiện thực tế tương ứng với dữ liệu của bạn\n    return doctor.id % 2 === 0;\n  });\n\n  // Xử lý sự kiện chọn thời gian\n  var handleTimeChange = function handleTimeChange(time) {\n    setSelectedTime(time);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"customer-view-doctor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Ch\\u1ECDn th\\u1EDDi gian trong ng\\xE0y\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"time-options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-option \".concat(selectedTime === 'morning' ? 'active' : ''),\n    onClick: function onClick() {\n      return handleTimeChange('morning');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Bu\\u1ED5i s\\xE1ng\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"time-option \".concat(selectedTime === 'afternoon' ? 'active' : ''),\n    onClick: function onClick() {\n      return handleTimeChange('afternoon');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Bu\\u1ED5i chi\\u1EC1u\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctor-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Danh s\\xE1ch b\\xE1c s\\u0129\"), filteredDoctors.length > 0 ? filteredDoctors.map(function (doctor) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"doctor-item\",\n      key: doctor.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, doctor.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, doctor.generalInfo), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }\n    }, \"\\u0110\\u1ECBa ch\\u1EC9: \", doctor.location));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Kh\\xF4ng c\\xF3 b\\xE1c s\\u0129 ph\\xF9 h\\u1EE3p.\")));\n}\nexport default CustomerViewDoctor;","map":{"version":3,"names":["React","useState","CustomerViewDoctor","_this","_useState","id","name","generalInfo","location","_useState2","_slicedToArray","doctors","setDoctors","_useState3","_useState4","selectedTime","setSelectedTime","filteredDoctors","filter","doctor","handleTimeChange","time","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","concat","onClick","length","map","key"],"sources":["E:/Semester 5/SWP/swp_demo/src/BodyContent/customer/CustomerViewDoctor/CustomerViewDoctor.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './CustomerViewDoctor.css';\r\n\r\nfunction CustomerViewDoctor() {\r\n  // Dữ liệu danh sách bác sĩ\r\n  const [doctors, setDoctors] = useState([\r\n    {\r\n      id: 1,\r\n      name: 'Bác sĩ A',\r\n      generalInfo: 'Thông tin chung về bác sĩ A',\r\n      location: 'Địa chỉ A',\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'Bác sĩ B',\r\n      generalInfo: 'Thông tin chung về bác sĩ B',\r\n      location: 'Địa chỉ B',\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'Bác sĩ C',\r\n      generalInfo: 'Thông tin chung về bác sĩ C',\r\n      location: 'Địa chỉ C',\r\n    },\r\n  ]);\r\n\r\n  // Chọn thời gian trong ngày\r\n  const [selectedTime, setSelectedTime] = useState('');\r\n\r\n  // Lọc danh sách bác sĩ dựa trên thời gian chọn\r\n  const filteredDoctors = doctors.filter((doctor) => {\r\n    // Nếu chưa chọn thời gian, hiển thị tất cả bác sĩ\r\n    if (!selectedTime) {\r\n      return true;\r\n    }\r\n    // Kiểm tra thời gian của bác sĩ có trùng với thời gian chọn hay không\r\n    // Ở đây ta sử dụng một điều kiện giả để kiểm tra\r\n    // Thay bằng điều kiện thực tế tương ứng với dữ liệu của bạn\r\n    return doctor.id % 2 === 0;\r\n  });\r\n\r\n  // Xử lý sự kiện chọn thời gian\r\n  const handleTimeChange = (time) => {\r\n    setSelectedTime(time);\r\n  };\r\n\r\n  return (\r\n    <div className=\"customer-view-doctor\">\r\n      <div className=\"time-selection\">\r\n        <h2>Chọn thời gian trong ngày</h2>\r\n        <div className=\"time-options\">\r\n          <button\r\n            className={`time-option ${selectedTime === 'morning' ? 'active' : ''}`}\r\n            onClick={() => handleTimeChange('morning')}\r\n          >\r\n            Buổi sáng\r\n          </button>\r\n          <button\r\n            className={`time-option ${selectedTime === 'afternoon' ? 'active' : ''}`}\r\n            onClick={() => handleTimeChange('afternoon')}\r\n          >\r\n            Buổi chiều\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"doctor-list\">\r\n        <h2>Danh sách bác sĩ</h2>\r\n        {filteredDoctors.length > 0 ? (\r\n          filteredDoctors.map((doctor) => (\r\n            <div className=\"doctor-item\" key={doctor.id}>\r\n              <h3>{doctor.name}</h3>\r\n              <p>{doctor.generalInfo}</p>\r\n              <p>Địa chỉ: {doctor.location}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>Không có bác sĩ phù hợp.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CustomerViewDoctor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}